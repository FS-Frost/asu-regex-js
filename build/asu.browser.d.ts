// Generated by dts-bundle-generator v9.5.1

export declare function hexToNumber(s: string): number;
export declare function numberToHex(n: number): string;
export declare function interpolate(min: number, max: number, intervals: number): number[];
export declare enum TagName {
	a = "a",
	alpha = "alpha",
	alpha1 = "1a",
	alpha2 = "2a",
	alpha3 = "3a",
	alpha4 = "4a",
	an = "an",
	b = "b",
	be = "be",
	blur = "blur",
	bord = "bord",
	clip = "clip",
	color = "c",
	color1 = "1c",
	color2 = "2c",
	color3 = "3c",
	color4 = "4c",
	fad = "fad",
	fade = "fade",
	fax = "fax",
	fay = "fay",
	fe = "fe",
	fn = "fn",
	fr = "fr",
	frx = "frx",
	fry = "fry",
	frz = "frz",
	fs = "fs",
	fscx = "fscx",
	fscy = "fscy",
	fsp = "fsp",
	i = "i",
	iclip = "iclip",
	kLowerCase = "k",
	kUpperCase = "K",
	kf = "kf",
	ko = "ko",
	move = "move",
	org = "org",
	p = "p",
	pbo = "pbo",
	pos = "pos",
	q = "q",
	r = "r",
	s = "s",
	shad = "shad",
	t = "t",
	u = "u",
	xbord = "xbord",
	xshad = "xshad",
	ybord = "ybord",
	yshad = "yshad"
}
export type Tag = {
	name: TagName;
	value: string;
};
export type TagA = {
	name: TagName.a;
	value: number;
};
export type TagAn = {
	name: TagName.an;
	value: number;
};
export type TagB = {
	name: TagName.b;
	value: number;
};
export type TagBlur = {
	name: TagName.blur;
	value: number;
};
export type TagBord = {
	name: TagName.bord;
	value: number;
};
export type TagXbord = {
	name: TagName.xbord;
	value: number;
};
export type TagYbord = {
	name: TagName.ybord;
	value: number;
};
export type ColorBGR = {
	blue: number;
	green: number;
	red: number;
};
export type TagC = ColorBGR & {
	name: TagName.color;
};
export type Tag1c = ColorBGR & {
	name: TagName.color1;
};
export type Tag2c = ColorBGR & {
	name: TagName.color2;
};
export type Tag3c = ColorBGR & {
	name: TagName.color3;
};
export type Tag4c = ColorBGR & {
	name: TagName.color4;
};
export type TagAlpha = {
	name: TagName.alpha;
	value: string;
};
export type Tag1a = {
	name: TagName.alpha1;
	value: string;
};
export type Tag2a = {
	name: TagName.alpha2;
	value: string;
};
export type Tag3a = {
	name: TagName.alpha3;
	value: string;
};
export type Tag4a = {
	name: TagName.alpha4;
	value: string;
};
export type TagClip = {
	name: TagName.clip;
	drawCommands: string;
};
export type TagIclip = {
	name: TagName.iclip;
	drawCommands: string;
};
export type TagFad = {
	name: TagName.fad;
	in: number;
	out: number;
};
export type TagFade = {
	name: TagName.fade;
	alpha1: number;
	alpha2: number;
	alpha3: number;
	t1: number;
	t2: number;
	t3: number;
	t4: number;
};
export type TagFax = {
	name: TagName.fax;
	value: number;
};
export type TagFay = {
	name: TagName.fay;
	value: number;
};
export type TagFe = {
	name: TagName.fe;
	encodingId: number;
};
export type TagFn = {
	name: TagName.fn;
	font: string;
};
export type TagFscx = {
	name: TagName.fscx;
	value: number;
};
export type TagFscy = {
	name: TagName.fscy;
	value: number;
};
export type TagFsp = {
	name: TagName.fsp;
	value: number;
};
export type TagKLowerCase = {
	name: TagName.kLowerCase;
	value: number;
};
export type TagKUpperCase = {
	name: TagName.kUpperCase;
	value: number;
};
export type TagKf = {
	name: TagName.kf;
	value: number;
};
export type TagKo = {
	name: TagName.ko;
	value: number;
};
export type TagOrg = {
	name: TagName.org;
	x: number;
	y: number;
};
export type TagP = {
	name: TagName.p;
	value: number;
};
export type TagPbo = {
	name: TagName.pbo;
	value: number;
};
export type TagQ = {
	name: TagName.q;
	value: number;
};
export type TagR = {
	name: TagName.r;
	style: string;
};
export type TagS = {
	name: TagName.s;
	value: number;
};
export type TagShad = {
	name: TagName.shad;
	value: number;
};
export type TagXshad = {
	name: TagName.xshad;
	value: number;
};
export type TagYshad = {
	name: TagName.yshad;
	value: number;
};
export type TagU = {
	name: TagName.u;
	value: number;
};
export type TagBe = {
	name: TagName.be;
	value: number;
};
export type TagFr = {
	name: TagName.fr;
	value: number;
};
export type TagFrx = {
	name: TagName.frx;
	value: number;
};
export type TagFry = {
	name: TagName.fry;
	value: number;
};
export type TagFrz = {
	name: TagName.frz;
	value: number;
};
export type TagI = {
	name: TagName.i;
	value: number;
};
export type TagFs = {
	name: TagName.fs;
	value: number;
};
export type TagPos = {
	name: TagName.pos;
	x: number;
	y: number;
};
export type TagMove = {
	name: TagName.move;
	x1: number;
	y1: number;
	x2: number;
	y2: number;
	t1: number | null;
	t2: number | null;
};
export type TagT = {
	name: TagName.t;
	t1: number | null;
	t2: number | null;
	accel: number | null;
	tags: Tags[];
};
export type Tags = TagA | TagAn | TagB | TagBlur | TagBord | TagXbord | TagYbord | TagC | Tag1c | Tag2c | Tag3c | Tag4c | TagAlpha | Tag1a | Tag2a | Tag3a | Tag4a | TagClip | TagIclip | TagFad | TagFade | TagFax | TagFay | TagFe | TagFn | TagFscx | TagFscy | TagFsp | TagKLowerCase | TagKUpperCase | TagKf | TagKo | TagOrg | TagP | TagPbo | TagQ | TagR | TagS | TagShad | TagXshad | TagYshad | TagU | TagBe | TagFr | TagFrx | TagFry | TagFrz | TagI | TagFs | TagT | TagPos | TagMove;
export declare function parseTags(text: string, tags: Tags[]): Tags[];
export type ContentEffect = {
	name: "effect";
	tags: Tags[];
};
export type ContentText = {
	name: "text";
	value: string;
};
export type ContentItem = ContentEffect | ContentText;
export declare function parseContent(text: string): ContentItem[];
export declare function contentEffectToString(item: ContentEffect): string;
export declare function contentsToString(items: ContentItem[]): string;
export declare function findA(items: ContentItem[]): TagA | null;
export declare function findB(items: ContentItem[]): TagB | null;
export declare function findColor(items: ContentItem[]): TagC | null;
export declare function findColor1(items: ContentItem[]): Tag1c | null;
export declare function findColor2(items: ContentItem[]): Tag2c | null;
export declare function findColor3(items: ContentItem[]): Tag3c | null;
export declare function findColor4(items: ContentItem[]): Tag4c | null;
export declare function findAlpha(items: ContentItem[]): TagAlpha | null;
export declare function findAlpha1(items: ContentItem[]): Tag1a | null;
export declare function findAlpha2(items: ContentItem[]): Tag2a | null;
export declare function findAlpha3(items: ContentItem[]): Tag3a | null;
export declare function findAlpha4(items: ContentItem[]): Tag4a | null;
export declare function findAn(items: ContentItem[]): TagAn | null;
export declare function findBe(items: ContentItem[]): TagBe | null;
export declare function findBlur(items: ContentItem[]): TagBlur | null;
export declare function findBord(items: ContentItem[]): TagBord | null;
export declare function findXbord(items: ContentItem[]): TagXbord | null;
export declare function findYbord(items: ContentItem[]): TagYbord | null;
export declare function findShad(items: ContentItem[]): TagShad | null;
export declare function findXshad(items: ContentItem[]): TagXshad | null;
export declare function findYshad(items: ContentItem[]): TagYshad | null;
export declare function findFr(items: ContentItem[]): TagFr | null;
export declare function findFrx(items: ContentItem[]): TagFrx | null;
export declare function findFry(items: ContentItem[]): TagFry | null;
export declare function findFrz(items: ContentItem[]): TagFrz | null;
export declare function findFax(items: ContentItem[]): TagFax | null;
export declare function findFay(items: ContentItem[]): TagFay | null;
export declare function findP(items: ContentItem[]): TagP | null;
export declare function findPbo(items: ContentItem[]): TagPbo | null;
export declare function findQ(items: ContentItem[]): TagQ | null;
export declare function findS(items: ContentItem[]): TagS | null;
export declare function findU(items: ContentItem[]): TagU | null;
export declare function findR(items: ContentItem[]): TagR | null;
export declare function findFe(items: ContentItem[]): TagFe | null;
export declare function findFn(items: ContentItem[]): TagFn | null;
export declare function findFscx(items: ContentItem[]): TagFscx | null;
export declare function findFscy(items: ContentItem[]): TagFscy | null;
export declare function findFsp(items: ContentItem[]): TagFsp | null;
export declare function findKLowerCase(items: ContentItem[]): TagKLowerCase | null;
export declare function findKUpperCase(items: ContentItem[]): TagKUpperCase | null;
export declare function findKo(items: ContentItem[]): TagKo | null;
export declare function findKf(items: ContentItem[]): TagKf | null;
export declare function findI(items: ContentItem[]): TagI | null;
export declare function findFs(items: ContentItem[]): TagFs | null;
export declare function findPos(items: ContentItem[]): TagPos | null;
export declare function findOrg(items: ContentItem[]): TagOrg | null;
export declare function findFad(items: ContentItem[]): TagFad | null;
export declare function findFade(items: ContentItem[]): TagFade | null;
export declare function findClip(items: ContentItem[]): TagClip | null;
export declare function findIclip(items: ContentItem[]): TagIclip | null;
export declare function findMove(items: ContentItem[]): TagMove | null;
export declare function findT(items: ContentItem[]): TagT | null;
export declare function setA(items: ContentItem[], newValue: number): TagA;
export declare function setAn(items: ContentItem[], newValue: number): TagAn;
export declare function setB(items: ContentItem[], newValue: number): TagB;
export declare function setColor(items: ContentItem[], blue: number, green: number, red: number): TagC;
export declare function setColor1(items: ContentItem[], blue: number, green: number, red: number): Tag1c;
export declare function setColor2(items: ContentItem[], blue: number, green: number, red: number): Tag2c;
export declare function setColor3(items: ContentItem[], blue: number, green: number, red: number): Tag3c;
export declare function setColor4(items: ContentItem[], blue: number, green: number, red: number): Tag4c;
export declare function setAlpha(items: ContentItem[], newValue: string): TagAlpha;
export declare function setAlpha1(items: ContentItem[], newValue: string): Tag1a;
export declare function setAlpha2(items: ContentItem[], newValue: string): Tag2a;
export declare function setAlpha3(items: ContentItem[], newValue: string): Tag3a;
export declare function setAlpha4(items: ContentItem[], newValue: string): Tag4a;
export declare function setBlur(items: ContentItem[], newValue: number): TagBlur;
export declare function setBord(items: ContentItem[], newValue: number): TagBord;
export declare function setXbord(items: ContentItem[], newValue: number): TagXbord;
export declare function setYbord(items: ContentItem[], newValue: number): TagYbord;
export declare function setFax(items: ContentItem[], newValue: number): TagFax;
export declare function setFay(items: ContentItem[], newValue: number): TagFay;
export declare function setFscx(items: ContentItem[], newValue: number): TagFscx;
export declare function setFscy(items: ContentItem[], newValue: number): TagFscy;
export declare function setFsp(items: ContentItem[], newValue: number): TagFsp;
export declare function setFe(items: ContentItem[], encodingId: number): TagFe;
export declare function setFn(items: ContentItem[], font: string): TagFn;
export declare function setKLowerCase(items: ContentItem[], newValue: number): TagKLowerCase;
export declare function setKUpperCase(items: ContentItem[], newValue: number): TagKUpperCase;
export declare function setKf(items: ContentItem[], newValue: number): TagKf;
export declare function setKo(items: ContentItem[], newValue: number): TagKo;
export declare function setP(items: ContentItem[], newValue: number): TagP;
export declare function setPbo(items: ContentItem[], newValue: number): TagPbo;
export declare function setQ(items: ContentItem[], newValue: number): TagQ;
export declare function setS(items: ContentItem[], newValue: number): TagS;
export declare function setShad(items: ContentItem[], newValue: number): TagShad;
export declare function setXshad(items: ContentItem[], newValue: number): TagXshad;
export declare function setYshad(items: ContentItem[], newValue: number): TagYshad;
export declare function setU(items: ContentItem[], newValue: number): TagU;
export declare function setBe(items: ContentItem[], newValue: number): TagBe;
export declare function setFs(items: ContentItem[], newValue: number): TagFs;
export declare function setFr(items: ContentItem[], newValue: number): TagFr;
export declare function setFrx(items: ContentItem[], newValue: number): TagFrx;
export declare function setFry(items: ContentItem[], newValue: number): TagFry;
export declare function setFrz(items: ContentItem[], newValue: number): TagFrz;
export declare function setI(items: ContentItem[], newValue: number): TagI;
export declare function setR(items: ContentItem[], style: string): TagR;
export declare function setPos(items: ContentItem[], x: number, y: number): TagPos;
export declare function setOrg(items: ContentItem[], x: number, y: number): TagOrg;
export declare function setFad(items: ContentItem[], fadeIn: number, fadeOut: number): TagFad;
export declare function setFade(items: ContentItem[], alpha1: number, alpha2: number, alpha3: number, t1: number, t2: number, t3: number, t4: number): TagFade;
export declare function setClip(items: ContentItem[], drawCommands: string): TagClip;
export declare function setIclip(items: ContentItem[], drawCommands: string): TagIclip;
export declare function setMove(items: ContentItem[], x1: number, y1: number, x2: number, y2: number, t1?: number | null, t2?: number | null): TagMove;
export declare function setT(items: ContentItem[], tags: Tags[], accel?: number | null, t1?: number | null, t2?: number | null): TagT;
export declare function tagsToItems(tags: Tags[]): ContentItem[];
export declare function itemsToTags(items: ContentItem[]): Tags[];
export declare function removeTag(items: ContentItem[], tagName: TagName): void;
export type Line = {
	type: string;
	layer: number;
	start: string;
	end: string;
	style: string;
	actor: string;
	marginLeft: number;
	marginRight: number;
	marginVertical: number;
	effect: string;
	content: string;
};
export declare function parseLine(text: string): Line | null;
export declare function lineToString(line: Line): string;
export declare function parseColorBGR(text: string): ColorBGR | null;

export {};
